#include <foo.hoo>

struct A {
	int a1;
};

struct B : A {
	int b1;
};

struct C : virtual A {
	int c1;
};

struct D : B, C {
	int d1;
};

void C::test_c(void)
{
	printf("%d %d\n", a1, c1);
}

void D::test(void)
{
	test_c();
	printf("%d %d %d %d\n", a1, b1, c1, d1);
}

char foo::func()
{
	printf("%d\n", x + *y);
	x = *y;
	*y = x;
	y = &x;
}

double foo::func_new(int z)
{
	struct foo *x = get_x(), *x2;
	printf("%d\n", *y + z);
	func1(z);
	x->func();
	x2->func1(arg1);
	((struct foo*)(3 + x->get_foo(x2->func1(z))) + 5)->func();
}

void foo::vfunc(void)
{
	int b = func1(z);
}

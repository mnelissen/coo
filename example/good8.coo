#include <stdio.h>    /* shared pointer test */
#include <stdlib.h>

refcount struct A {
	int a;
	virtual ~A();
};

refcount struct B {
	int b;
	virtual ~B();
};

refcount struct C : A, B {
	int c;
};

struct D {
	A *a;
};

A::~A(void)
{
	a = -1;
}

B::~B(void)
{
	b = -2;
}

C::coo_class;

void D::assign_a(A *new_a)
{
	a = new_a;
}

refcount struct E {
	int e;
};

refcount struct F : E {
	int f;
	F(int e, int f);
};

F::F(int new_e, int new_f)
{
	E();
	e = new_e;
	f = new_f;
}

struct G {
	E *e;
	void assign_e(E *new_e);
	G(int new_e, int new_f);
};

E::coo_class;

A *func1(A *a)
{
	return a;
}

void G::assign_e(E *new_e)
{
	e = new_e;
}

G::G(int new_e, int new_f)
{
	assign_e(new F(new_e,new_f));
}

int main(void)
{
	A *a1, *a2;
	B *b1, *b2;
	D d;
	G *g = new G(2, 3);
	F *f = (F*)g->e;
	a1 = new A;
	b1 = new B;
	a2 = new C;
	b2 = new C;
	d.assign_a(a1);
	d.assign_a(a2);
	func1(a1);
	delete a1;
	delete a2;
	delete b1;
	delete b2;
	delete g;
	return 0;
}
